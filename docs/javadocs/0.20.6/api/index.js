Index.PACKAGES = {"com.github.pjfanning.zio" : [], "com.github.pjfanning.zio.micrometer" : [{"name" : "com.github.pjfanning.zio.micrometer.Counter", "trait" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html", "kind" : "trait", "members_trait" : [{"label" : "inc", "tail" : "(): UIO[Unit]", "member" : "com.github.pjfanning.zio.micrometer.Counter.inc", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#inc():zio.UIO[Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "get", "tail" : "(): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.Counter.get", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#get:zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "inc", "tail" : "(amount: Double): UIO[Unit]", "member" : "com.github.pjfanning.zio.micrometer.Counter.inc", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Counter.html#inc(amount:Double):zio.UIO[Unit]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.pjfanning.zio.micrometer.DistributionSummary", "trait" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "record", "tail" : "(value: Double): UIO[Unit]", "member" : "com.github.pjfanning.zio.micrometer.DistributionSummary.record", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#record(value:Double):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "mean", "tail" : "(): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.DistributionSummary.mean", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#mean:zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "max", "tail" : "(): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.DistributionSummary.max", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#max:zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "totalAmount", "tail" : "(): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.DistributionSummary.totalAmount", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#totalAmount:zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "count", "tail" : "(): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.DistributionSummary.count", "link" : "com\/github\/pjfanning\/zio\/micrometer\/DistributionSummary.html#count:zio.UIO[Double]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.pjfanning.zio.micrometer.Gauge", "trait" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html", "kind" : "trait", "members_trait" : [{"label" : "dec", "tail" : "(): UIO[Unit]", "member" : "com.github.pjfanning.zio.micrometer.Gauge.dec", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#dec():zio.UIO[Unit]", "kind" : "def"}, {"label" : "inc", "tail" : "(): UIO[Unit]", "member" : "com.github.pjfanning.zio.micrometer.Gauge.inc", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#inc():zio.UIO[Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "dec", "tail" : "(amount: Double): UIO[Unit]", "member" : "com.github.pjfanning.zio.micrometer.Gauge.dec", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#dec(amount:Double):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "inc", "tail" : "(amount: Double): UIO[Unit]", "member" : "com.github.pjfanning.zio.micrometer.Gauge.inc", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#inc(amount:Double):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "set", "tail" : "(value: Double): UIO[Unit]", "member" : "com.github.pjfanning.zio.micrometer.Gauge.set", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#set(value:Double):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.ReadOnlyGauge.get", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Gauge.html#get:zio.UIO[Double]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.pjfanning.zio.micrometer.HasMicrometerMeterId", "trait" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getMeterId", "tail" : "(): UIO[Id]", "member" : "com.github.pjfanning.zio.micrometer.HasMicrometerMeterId.getMeterId", "link" : "com\/github\/pjfanning\/zio\/micrometer\/HasMicrometerMeterId.html#getMeterId:zio.UIO[io.micrometer.core.instrument.Meter.Id]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.pjfanning.zio.micrometer.LongTaskTimer", "trait" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "mean", "tail" : "(timeUnit: TimeUnit): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.TimerWithMinMax.mean", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#mean(timeUnit:concurrent.duration.TimeUnit):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "max", "tail" : "(timeUnit: TimeUnit): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.TimerWithMinMax.max", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#max(timeUnit:concurrent.duration.TimeUnit):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "startTimerSample", "tail" : "(): UIO[TimerSample]", "member" : "com.github.pjfanning.zio.micrometer.TimerBase.startTimerSample", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#startTimerSample():zio.UIO[com.github.pjfanning.zio.micrometer.TimerSample]", "kind" : "abstract def"}, {"label" : "totalTime", "tail" : "(timeUnit: TimeUnit): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge.totalTime", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#totalTime(timeUnit:concurrent.duration.TimeUnit):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "baseTimeUnit", "tail" : "(): UIO[TimeUnit]", "member" : "com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge.baseTimeUnit", "link" : "com\/github\/pjfanning\/zio\/micrometer\/LongTaskTimer.html#baseTimeUnit:zio.UIO[concurrent.duration.TimeUnit]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.pjfanning.zio.micrometer.ReadOnlyGauge", "trait" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "get", "tail" : "(): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.ReadOnlyGauge.get", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyGauge.html#get:zio.UIO[Double]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge", "trait" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "totalTime", "tail" : "(timeUnit: TimeUnit): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge.totalTime", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#totalTime(timeUnit:concurrent.duration.TimeUnit):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "baseTimeUnit", "tail" : "(): UIO[TimeUnit]", "member" : "com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge.baseTimeUnit", "link" : "com\/github\/pjfanning\/zio\/micrometer\/ReadOnlyTimeGauge.html#baseTimeUnit:zio.UIO[concurrent.duration.TimeUnit]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.pjfanning.zio.micrometer.TimeGauge", "trait" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "record", "tail" : "(duration: FiniteDuration): UIO[Unit]", "member" : "com.github.pjfanning.zio.micrometer.TimeGauge.record", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#record(duration:scala.concurrent.duration.FiniteDuration):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "record", "tail" : "(duration: zio.Duration): UIO[Unit]", "member" : "com.github.pjfanning.zio.micrometer.TimeGauge.record", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#record(duration:zio.Duration):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "startTimerSample", "tail" : "(): UIO[TimerSample]", "member" : "com.github.pjfanning.zio.micrometer.TimerBase.startTimerSample", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#startTimerSample():zio.UIO[com.github.pjfanning.zio.micrometer.TimerSample]", "kind" : "abstract def"}, {"label" : "totalTime", "tail" : "(timeUnit: TimeUnit): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge.totalTime", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#totalTime(timeUnit:concurrent.duration.TimeUnit):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "baseTimeUnit", "tail" : "(): UIO[TimeUnit]", "member" : "com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge.baseTimeUnit", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimeGauge.html#baseTimeUnit:zio.UIO[concurrent.duration.TimeUnit]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.pjfanning.zio.micrometer.Timer", "trait" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "record", "tail" : "(duration: FiniteDuration): UIO[Unit]", "member" : "com.github.pjfanning.zio.micrometer.Timer.record", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#record(duration:scala.concurrent.duration.FiniteDuration):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "record", "tail" : "(duration: zio.Duration): UIO[Unit]", "member" : "com.github.pjfanning.zio.micrometer.Timer.record", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#record(duration:zio.Duration):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "count", "tail" : "(): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.Timer.count", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#count:zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "mean", "tail" : "(timeUnit: TimeUnit): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.TimerWithMinMax.mean", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#mean(timeUnit:concurrent.duration.TimeUnit):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "max", "tail" : "(timeUnit: TimeUnit): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.TimerWithMinMax.max", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#max(timeUnit:concurrent.duration.TimeUnit):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "startTimerSample", "tail" : "(): UIO[TimerSample]", "member" : "com.github.pjfanning.zio.micrometer.TimerBase.startTimerSample", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#startTimerSample():zio.UIO[com.github.pjfanning.zio.micrometer.TimerSample]", "kind" : "abstract def"}, {"label" : "totalTime", "tail" : "(timeUnit: TimeUnit): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge.totalTime", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#totalTime(timeUnit:concurrent.duration.TimeUnit):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "baseTimeUnit", "tail" : "(): UIO[TimeUnit]", "member" : "com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge.baseTimeUnit", "link" : "com\/github\/pjfanning\/zio\/micrometer\/Timer.html#baseTimeUnit:zio.UIO[concurrent.duration.TimeUnit]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.pjfanning.zio.micrometer.TimerBase", "trait" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "startTimerSample", "tail" : "(): UIO[TimerSample]", "member" : "com.github.pjfanning.zio.micrometer.TimerBase.startTimerSample", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#startTimerSample():zio.UIO[com.github.pjfanning.zio.micrometer.TimerSample]", "kind" : "abstract def"}, {"label" : "totalTime", "tail" : "(timeUnit: TimeUnit): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge.totalTime", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#totalTime(timeUnit:concurrent.duration.TimeUnit):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "baseTimeUnit", "tail" : "(): UIO[TimeUnit]", "member" : "com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge.baseTimeUnit", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerBase.html#baseTimeUnit:zio.UIO[concurrent.duration.TimeUnit]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.pjfanning.zio.micrometer.TimerSample", "trait" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "stop", "tail" : "(): UIO[Unit]", "member" : "com.github.pjfanning.zio.micrometer.TimerSample.stop", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerSample.html#stop():zio.UIO[Unit]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.pjfanning.zio.micrometer.TimerWithMinMax", "trait" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "mean", "tail" : "(timeUnit: TimeUnit): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.TimerWithMinMax.mean", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#mean(timeUnit:concurrent.duration.TimeUnit):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "max", "tail" : "(timeUnit: TimeUnit): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.TimerWithMinMax.max", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#max(timeUnit:concurrent.duration.TimeUnit):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "startTimerSample", "tail" : "(): UIO[TimerSample]", "member" : "com.github.pjfanning.zio.micrometer.TimerBase.startTimerSample", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#startTimerSample():zio.UIO[com.github.pjfanning.zio.micrometer.TimerSample]", "kind" : "abstract def"}, {"label" : "totalTime", "tail" : "(timeUnit: TimeUnit): UIO[Double]", "member" : "com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge.totalTime", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#totalTime(timeUnit:concurrent.duration.TimeUnit):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "baseTimeUnit", "tail" : "(): UIO[TimeUnit]", "member" : "com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge.baseTimeUnit", "link" : "com\/github\/pjfanning\/zio\/micrometer\/TimerWithMinMax.html#baseTimeUnit:zio.UIO[concurrent.duration.TimeUnit]", "kind" : "abstract def"}], "shortDescription" : ""}], "com.github.pjfanning.zio.micrometer.unsafe" : [{"name" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble", "shortDescription" : "A double value that may be updated atomically.", "members_class" : [{"label" : "doubleValue", "tail" : "(): Double", "member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble.doubleValue", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#doubleValue():Double", "kind" : "def"}, {"label" : "floatValue", "tail" : "(): Float", "member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble.floatValue", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#floatValue():Float", "kind" : "def"}, {"label" : "longValue", "tail" : "(): Long", "member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble.longValue", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#longValue():Long", "kind" : "def"}, {"label" : "intValue", "tail" : "(): Int", "member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble.intValue", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#intValue():Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#toString():String", "kind" : "def"}, {"label" : "updateAndGet", "tail" : "(updateFunction: DoubleUnaryOperator): Double", "member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble.updateAndGet", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#updateAndGet(updateFunction:java.util.function.DoubleUnaryOperator):Double", "kind" : "final def"}, {"label" : "getAndUpdate", "tail" : "(updateFunction: DoubleUnaryOperator): Double", "member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble.getAndUpdate", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#getAndUpdate(updateFunction:java.util.function.DoubleUnaryOperator):Double", "kind" : "final def"}, {"label" : "accumulateAndGet", "tail" : "(x: Double, accumulatorFunction: DoubleBinaryOperator): Double", "member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble.accumulateAndGet", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#accumulateAndGet(x:Double,accumulatorFunction:java.util.function.DoubleBinaryOperator):Double", "kind" : "final def"}, {"label" : "getAndAccumulate", "tail" : "(x: Double, accumulatorFunction: DoubleBinaryOperator): Double", "member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble.getAndAccumulate", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#getAndAccumulate(x:Double,accumulatorFunction:java.util.function.DoubleBinaryOperator):Double", "kind" : "final def"}, {"label" : "addAndGet", "tail" : "(delta: Double): Double", "member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble.addAndGet", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#addAndGet(delta:Double):Double", "kind" : "final def"}, {"label" : "getAndAdd", "tail" : "(delta: Double): Double", "member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble.getAndAdd", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#getAndAdd(delta:Double):Double", "kind" : "final def"}, {"label" : "weakCompareAndSet", "tail" : "(expect: Double, update: Double): Boolean", "member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble.weakCompareAndSet", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#weakCompareAndSet(expect:Double,update:Double):Boolean", "kind" : "final def"}, {"label" : "compareAndSet", "tail" : "(expect: Double, update: Double): Boolean", "member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble.compareAndSet", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#compareAndSet(expect:Double,update:Double):Boolean", "kind" : "final def"}, {"label" : "getAndSet", "tail" : "(newValue: Double): Double", "member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble.getAndSet", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#getAndSet(newValue:Double):Double", "kind" : "final def"}, {"label" : "lazySet", "tail" : "(newValue: Double): Unit", "member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble.lazySet", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#lazySet(newValue:Double):Unit", "kind" : "final def"}, {"label" : "set", "tail" : "(newValue: Double): Unit", "member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble.set", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#set(newValue:Double):Unit", "kind" : "final def"}, {"label" : "get", "tail" : "(): Double", "member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble.get", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#get():Double", "kind" : "final def"}, {"member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble#<init>", "error" : "unsupported entity"}, {"member" : "com.github.pjfanning.zio.micrometer.unsafe.AtomicDouble#<init>", "error" : "unsupported entity"}, {"label" : "shortValue", "tail" : "(): Short", "member" : "java.lang.Number.shortValue", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#shortValue():Short", "kind" : "def"}, {"label" : "byteValue", "tail" : "(): Byte", "member" : "java.lang.Number.byteValue", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#byteValue():Byte", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/AtomicDouble.html", "kind" : "class"}, {"name" : "com.github.pjfanning.zio.micrometer.unsafe.Counter", "shortDescription" : "", "object" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html", "members_object" : [{"label" : "unlabelled", "tail" : "(name: String, help: Option[String]): ZIO[Registry, Throwable, Counter]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.Counter.unlabelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#unlabelled(name:String,help:Option[String]):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,com.github.pjfanning.zio.micrometer.Counter]", "kind" : "def"}, {"label" : "labelled", "tail" : "(name: String, help: Option[String], labelNames: Seq[String]): ZIO[Registry, Throwable, (Seq[String]) => Counter]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.Counter.labelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#labelled(name:String,help:Option[String],labelNames:Seq[String]):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,Seq[String]=>com.github.pjfanning.zio.micrometer.Counter]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Counter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.pjfanning.zio.micrometer.unsafe.DistributionSummary", "shortDescription" : "", "object" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html", "members_object" : [{"label" : "unlabelled", "tail" : "(name: String, help: Option[String], scale: Double, minimumExpectedValue: Option[Double], maximumExpectedValue: Option[Double], serviceLevelObjectives: Seq[Double], distributionStatisticExpiry: Option[FiniteDuration], distributionStatisticBufferLength: Option[Int], publishPercentiles: Seq[Double], publishPercentileHistogram: Option[Boolean], percentilePrecision: Option[Int], baseUnit: Option[String]): ZIO[Registry, Throwable, DistributionSummary]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.DistributionSummary.unlabelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#unlabelled(name:String,help:Option[String],scale:Double,minimumExpectedValue:Option[Double],maximumExpectedValue:Option[Double],serviceLevelObjectives:Seq[Double],distributionStatisticExpiry:Option[scala.concurrent.duration.FiniteDuration],distributionStatisticBufferLength:Option[Int],publishPercentiles:Seq[Double],publishPercentileHistogram:Option[Boolean],percentilePrecision:Option[Int],baseUnit:Option[String]):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,com.github.pjfanning.zio.micrometer.DistributionSummary]", "kind" : "def"}, {"label" : "labelled", "tail" : "(name: String, help: Option[String], labelNames: Seq[String], scale: Double, minimumExpectedValue: Option[Double], maximumExpectedValue: Option[Double], serviceLevelObjectives: Seq[Double], distributionStatisticExpiry: Option[FiniteDuration], distributionStatisticBufferLength: Option[Int], publishPercentiles: Seq[Double], publishPercentileHistogram: Option[Boolean], percentilePrecision: Option[Int], baseUnit: Option[String]): ZIO[Registry, Throwable, (Seq[String]) => DistributionSummary]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.DistributionSummary.labelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#labelled(name:String,help:Option[String],labelNames:Seq[String],scale:Double,minimumExpectedValue:Option[Double],maximumExpectedValue:Option[Double],serviceLevelObjectives:Seq[Double],distributionStatisticExpiry:Option[scala.concurrent.duration.FiniteDuration],distributionStatisticBufferLength:Option[Int],publishPercentiles:Seq[Double],publishPercentileHistogram:Option[Boolean],percentilePrecision:Option[Int],baseUnit:Option[String]):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,Seq[String]=>com.github.pjfanning.zio.micrometer.DistributionSummary]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/DistributionSummary$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.pjfanning.zio.micrometer.unsafe.Gauge", "shortDescription" : "", "object" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html", "members_object" : [{"label" : "unlabelled", "tail" : "(name: String, help: Option[String]): ZIO[Registry, Throwable, Gauge]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.Gauge.unlabelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#unlabelled(name:String,help:Option[String]):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,com.github.pjfanning.zio.micrometer.Gauge]", "kind" : "def"}, {"label" : "labelled", "tail" : "(name: String, help: Option[String], labelNames: Seq[String]): ZIO[Registry, Throwable, (Seq[String]) => Gauge]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.Gauge.labelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#labelled(name:String,help:Option[String],labelNames:Seq[String]):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,Seq[String]=>com.github.pjfanning.zio.micrometer.Gauge]", "kind" : "def"}, {"label" : "unlabelledTFunction", "tail" : "(name: String, help: Option[String], t: T, fun: (T) => Double, strongReference: Boolean): ZIO[Registry, Throwable, ReadOnlyGauge]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.Gauge.unlabelledTFunction", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#unlabelledTFunction[T](name:String,help:Option[String],t:T,fun:T=>Double,strongReference:Boolean):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,com.github.pjfanning.zio.micrometer.ReadOnlyGauge]", "kind" : "def"}, {"label" : "labelledTFunction", "tail" : "(name: String, help: Option[String], labelNames: Seq[String], t: T, fun: (T) => Double, strongReference: Boolean): ZIO[Registry, Throwable, (Seq[String]) => ReadOnlyGauge]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.Gauge.labelledTFunction", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#labelledTFunction[T](name:String,help:Option[String],labelNames:Seq[String],t:T,fun:T=>Double,strongReference:Boolean):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,Seq[String]=>com.github.pjfanning.zio.micrometer.ReadOnlyGauge]", "kind" : "def"}, {"label" : "unlabelledFunction", "tail" : "(name: String, help: Option[String], fun: () => Double): ZIO[Registry, Throwable, ReadOnlyGauge]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.Gauge.unlabelledFunction", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#unlabelledFunction(name:String,help:Option[String],fun:()=>Double):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,com.github.pjfanning.zio.micrometer.ReadOnlyGauge]", "kind" : "def"}, {"label" : "labelledFunction", "tail" : "(name: String, help: Option[String], labelNames: Seq[String], fun: () => Double): ZIO[Registry, Throwable, (Seq[String]) => ReadOnlyGauge]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.Gauge.labelledFunction", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#labelledFunction(name:String,help:Option[String],labelNames:Seq[String],fun:()=>Double):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,Seq[String]=>com.github.pjfanning.zio.micrometer.ReadOnlyGauge]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Gauge$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.pjfanning.zio.micrometer.unsafe.LabelledMetric", "trait" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/LabelledMetric.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Helper to create strongly typed Micrometer labelled metrics."}, {"name" : "com.github.pjfanning.zio.micrometer.unsafe.Registry", "shortDescription" : "", "object" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html", "members_object" : [{"label" : "makeWith", "tail" : "(registry: MeterRegistry): ULayer[Registry]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.Registry.makeWith", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#makeWith(registry:io.micrometer.core.instrument.MeterRegistry):zio.ULayer[com.github.pjfanning.zio.micrometer.unsafe.package.Registry]", "kind" : "def"}, {"label" : "makeService", "tail" : "(registry: MeterRegistry): UIO[Service]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.Registry.makeService", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#makeService(registry:io.micrometer.core.instrument.MeterRegistry):zio.UIO[com.github.pjfanning.zio.micrometer.unsafe.package.Registry.Service]", "kind" : "def"}, {"label" : "Service", "tail" : "", "member" : "com.github.pjfanning.zio.micrometer.unsafe.Registry.Service", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#ServiceextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/package$$Registry$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.pjfanning.zio.micrometer.unsafe.TimeGauge", "shortDescription" : "", "object" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html", "members_object" : [{"label" : "unlabelledTFunction", "tail" : "(name: String, help: Option[String], timeUnit: TimeUnit, t: T, fun: (T) => Double): ZIO[Registry, Throwable, ReadOnlyTimeGauge]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.TimeGauge.unlabelledTFunction", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#unlabelledTFunction[T](name:String,help:Option[String],timeUnit:concurrent.duration.TimeUnit,t:T,fun:T=>Double):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge]", "kind" : "def"}, {"label" : "labelledTFunction", "tail" : "(name: String, help: Option[String], labelNames: Seq[String], timeUnit: TimeUnit, t: T, fun: (T) => Double): ZIO[Registry, Throwable, (Seq[String]) => ReadOnlyTimeGauge]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.TimeGauge.labelledTFunction", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#labelledTFunction[T](name:String,help:Option[String],labelNames:Seq[String],timeUnit:concurrent.duration.TimeUnit,t:T,fun:T=>Double):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,Seq[String]=>com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge]", "kind" : "def"}, {"label" : "unlabelledFunction", "tail" : "(name: String, help: Option[String], timeUnit: TimeUnit, fun: => Double): ZIO[Registry, Throwable, ReadOnlyTimeGauge]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.TimeGauge.unlabelledFunction", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#unlabelledFunction(name:String,help:Option[String],timeUnit:concurrent.duration.TimeUnit,fun:=>Double):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge]", "kind" : "def"}, {"label" : "labelledFunction", "tail" : "(name: String, help: Option[String], labelNames: Seq[String], timeUnit: TimeUnit, fun: => Double): ZIO[Registry, Throwable, (Seq[String]) => ReadOnlyTimeGauge]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.TimeGauge.labelledFunction", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#labelledFunction(name:String,help:Option[String],labelNames:Seq[String],timeUnit:concurrent.duration.TimeUnit,fun:=>Double):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,Seq[String]=>com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge]", "kind" : "def"}, {"label" : "unlabelled", "tail" : "(name: String, help: Option[String], timeUnit: TimeUnit): ZIO[Registry, Throwable, TimeGauge]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.TimeGauge.unlabelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#unlabelled(name:String,help:Option[String],timeUnit:concurrent.duration.TimeUnit):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,com.github.pjfanning.zio.micrometer.TimeGauge]", "kind" : "def"}, {"label" : "labelled", "tail" : "(name: String, help: Option[String], labelNames: Seq[String], timeUnit: TimeUnit): ZIO[Registry, Throwable, (Seq[String]) => TimeGauge]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.TimeGauge.labelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#labelled(name:String,help:Option[String],labelNames:Seq[String],timeUnit:concurrent.duration.TimeUnit):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,Seq[String]=>com.github.pjfanning.zio.micrometer.TimeGauge]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/TimeGauge$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.pjfanning.zio.micrometer.unsafe.Timer", "shortDescription" : "", "object" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html", "members_object" : [{"label" : "unlabelledLongTaskTimer", "tail" : "(name: String, help: Option[String], minimumExpectedValue: Option[FiniteDuration], maximumExpectedValue: Option[FiniteDuration], serviceLevelObjectives: Seq[FiniteDuration], distributionStatisticExpiry: Option[FiniteDuration], distributionStatisticBufferLength: Option[Int], publishPercentiles: Seq[Double], publishPercentileHistogram: Option[Boolean], percentilePrecision: Option[Int]): ZIO[Registry, Throwable, LongTaskTimer]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.Timer.unlabelledLongTaskTimer", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#unlabelledLongTaskTimer(name:String,help:Option[String],minimumExpectedValue:Option[scala.concurrent.duration.FiniteDuration],maximumExpectedValue:Option[scala.concurrent.duration.FiniteDuration],serviceLevelObjectives:Seq[scala.concurrent.duration.FiniteDuration],distributionStatisticExpiry:Option[scala.concurrent.duration.FiniteDuration],distributionStatisticBufferLength:Option[Int],publishPercentiles:Seq[Double],publishPercentileHistogram:Option[Boolean],percentilePrecision:Option[Int]):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,com.github.pjfanning.zio.micrometer.LongTaskTimer]", "kind" : "def"}, {"label" : "labelledLongTaskTimer", "tail" : "(name: String, help: Option[String], labelNames: Seq[String], minimumExpectedValue: Option[FiniteDuration], maximumExpectedValue: Option[FiniteDuration], serviceLevelObjectives: Seq[FiniteDuration], distributionStatisticExpiry: Option[FiniteDuration], distributionStatisticBufferLength: Option[Int], publishPercentiles: Seq[Double], publishPercentileHistogram: Option[Boolean], percentilePrecision: Option[Int]): ZIO[Registry, Throwable, (Seq[String]) => LongTaskTimer]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.Timer.labelledLongTaskTimer", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#labelledLongTaskTimer(name:String,help:Option[String],labelNames:Seq[String],minimumExpectedValue:Option[scala.concurrent.duration.FiniteDuration],maximumExpectedValue:Option[scala.concurrent.duration.FiniteDuration],serviceLevelObjectives:Seq[scala.concurrent.duration.FiniteDuration],distributionStatisticExpiry:Option[scala.concurrent.duration.FiniteDuration],distributionStatisticBufferLength:Option[Int],publishPercentiles:Seq[Double],publishPercentileHistogram:Option[Boolean],percentilePrecision:Option[Int]):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,Seq[String]=>com.github.pjfanning.zio.micrometer.LongTaskTimer]", "kind" : "def"}, {"label" : "unlabelled", "tail" : "(name: String, help: Option[String], minimumExpectedValue: Option[FiniteDuration], maximumExpectedValue: Option[FiniteDuration], serviceLevelObjectives: Seq[FiniteDuration], distributionStatisticExpiry: Option[FiniteDuration], distributionStatisticBufferLength: Option[Int], publishPercentiles: Seq[Double], publishPercentileHistogram: Option[Boolean], percentilePrecision: Option[Int], pauseDetector: Option[PauseDetector]): ZIO[Registry, Throwable, Timer]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.Timer.unlabelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#unlabelled(name:String,help:Option[String],minimumExpectedValue:Option[scala.concurrent.duration.FiniteDuration],maximumExpectedValue:Option[scala.concurrent.duration.FiniteDuration],serviceLevelObjectives:Seq[scala.concurrent.duration.FiniteDuration],distributionStatisticExpiry:Option[scala.concurrent.duration.FiniteDuration],distributionStatisticBufferLength:Option[Int],publishPercentiles:Seq[Double],publishPercentileHistogram:Option[Boolean],percentilePrecision:Option[Int],pauseDetector:Option[io.micrometer.core.instrument.distribution.pause.PauseDetector]):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,com.github.pjfanning.zio.micrometer.Timer]", "kind" : "def"}, {"label" : "labelled", "tail" : "(name: String, help: Option[String], labelNames: Seq[String], minimumExpectedValue: Option[FiniteDuration], maximumExpectedValue: Option[FiniteDuration], serviceLevelObjectives: Seq[FiniteDuration], distributionStatisticExpiry: Option[FiniteDuration], distributionStatisticBufferLength: Option[Int], publishPercentiles: Seq[Double], publishPercentileHistogram: Option[Boolean], percentilePrecision: Option[Int], pauseDetector: Option[PauseDetector]): ZIO[Registry, Throwable, (Seq[String]) => Timer]", "member" : "com.github.pjfanning.zio.micrometer.unsafe.Timer.labelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#labelled(name:String,help:Option[String],labelNames:Seq[String],minimumExpectedValue:Option[scala.concurrent.duration.FiniteDuration],maximumExpectedValue:Option[scala.concurrent.duration.FiniteDuration],serviceLevelObjectives:Seq[scala.concurrent.duration.FiniteDuration],distributionStatisticExpiry:Option[scala.concurrent.duration.FiniteDuration],distributionStatisticBufferLength:Option[Int],publishPercentiles:Seq[Double],publishPercentileHistogram:Option[Boolean],percentilePrecision:Option[Int],pauseDetector:Option[io.micrometer.core.instrument.distribution.pause.PauseDetector]):zio.ZIO[com.github.pjfanning.zio.micrometer.unsafe.Registry,Throwable,Seq[String]=>com.github.pjfanning.zio.micrometer.Timer]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/unsafe\/Timer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.github.pjfanning" : [], "com.github.pjfanning.zio.micrometer.safe" : [{"name" : "com.github.pjfanning.zio.micrometer.safe.Counter", "shortDescription" : "", "object" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html", "members_object" : [{"label" : "unlabelled", "tail" : "(name: String, help: Option[String]): URIO[Registry, Counter]", "member" : "com.github.pjfanning.zio.micrometer.safe.Counter.unlabelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#unlabelled(name:String,help:Option[String]):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,com.github.pjfanning.zio.micrometer.Counter]", "kind" : "def"}, {"label" : "labelled", "tail" : "(name: String, help: Option[String], labelNames: Seq[String]): URIO[Registry, (Seq[String]) => Counter]", "member" : "com.github.pjfanning.zio.micrometer.safe.Counter.labelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#labelled(name:String,help:Option[String],labelNames:Seq[String]):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,Seq[String]=>com.github.pjfanning.zio.micrometer.Counter]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Counter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.pjfanning.zio.micrometer.safe.DistributionSummary", "shortDescription" : "", "object" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html", "members_object" : [{"label" : "unlabelled", "tail" : "(name: String, help: Option[String], scale: Double, minimumExpectedValue: Option[Double], maximumExpectedValue: Option[Double], serviceLevelObjectives: Seq[Double], distributionStatisticExpiry: Option[FiniteDuration], distributionStatisticBufferLength: Option[Int], publishPercentiles: Seq[Double], publishPercentileHistogram: Option[Boolean], percentilePrecision: Option[Int], baseUnit: Option[String]): URIO[Registry, DistributionSummary]", "member" : "com.github.pjfanning.zio.micrometer.safe.DistributionSummary.unlabelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#unlabelled(name:String,help:Option[String],scale:Double,minimumExpectedValue:Option[Double],maximumExpectedValue:Option[Double],serviceLevelObjectives:Seq[Double],distributionStatisticExpiry:Option[scala.concurrent.duration.FiniteDuration],distributionStatisticBufferLength:Option[Int],publishPercentiles:Seq[Double],publishPercentileHistogram:Option[Boolean],percentilePrecision:Option[Int],baseUnit:Option[String]):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,com.github.pjfanning.zio.micrometer.DistributionSummary]", "kind" : "def"}, {"label" : "labelled", "tail" : "(name: String, help: Option[String], labelNames: Seq[String], scale: Double, minimumExpectedValue: Option[Double], maximumExpectedValue: Option[Double], serviceLevelObjectives: Seq[Double], distributionStatisticExpiry: Option[FiniteDuration], distributionStatisticBufferLength: Option[Int], publishPercentiles: Seq[Double], publishPercentileHistogram: Option[Boolean], percentilePrecision: Option[Int], baseUnit: Option[String]): URIO[Registry, (Seq[String]) => DistributionSummary]", "member" : "com.github.pjfanning.zio.micrometer.safe.DistributionSummary.labelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#labelled(name:String,help:Option[String],labelNames:Seq[String],scale:Double,minimumExpectedValue:Option[Double],maximumExpectedValue:Option[Double],serviceLevelObjectives:Seq[Double],distributionStatisticExpiry:Option[scala.concurrent.duration.FiniteDuration],distributionStatisticBufferLength:Option[Int],publishPercentiles:Seq[Double],publishPercentileHistogram:Option[Boolean],percentilePrecision:Option[Int],baseUnit:Option[String]):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,Seq[String]=>com.github.pjfanning.zio.micrometer.DistributionSummary]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/DistributionSummary$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.pjfanning.zio.micrometer.safe.Gauge", "shortDescription" : "", "object" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html", "members_object" : [{"label" : "unlabelledTFunction", "tail" : "(name: String, help: Option[String], t: T, fun: (T) => Double): URIO[Registry, ReadOnlyGauge]", "member" : "com.github.pjfanning.zio.micrometer.safe.Gauge.unlabelledTFunction", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#unlabelledTFunction[T](name:String,help:Option[String],t:T,fun:T=>Double):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,com.github.pjfanning.zio.micrometer.ReadOnlyGauge]", "kind" : "def"}, {"label" : "labelledTFunction", "tail" : "(name: String, help: Option[String], labelNames: Seq[String], t: T, fun: (T) => Double): URIO[Registry, (Seq[String]) => ReadOnlyGauge]", "member" : "com.github.pjfanning.zio.micrometer.safe.Gauge.labelledTFunction", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#labelledTFunction[T](name:String,help:Option[String],labelNames:Seq[String],t:T,fun:T=>Double):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,Seq[String]=>com.github.pjfanning.zio.micrometer.ReadOnlyGauge]", "kind" : "def"}, {"label" : "unlabelledFunction", "tail" : "(name: String, help: Option[String], fun: () => Double): URIO[Registry, ReadOnlyGauge]", "member" : "com.github.pjfanning.zio.micrometer.safe.Gauge.unlabelledFunction", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#unlabelledFunction(name:String,help:Option[String],fun:()=>Double):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,com.github.pjfanning.zio.micrometer.ReadOnlyGauge]", "kind" : "def"}, {"label" : "labelledFunction", "tail" : "(name: String, help: Option[String], labelNames: Seq[String], fun: () => Double): URIO[Registry, (Seq[String]) => ReadOnlyGauge]", "member" : "com.github.pjfanning.zio.micrometer.safe.Gauge.labelledFunction", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#labelledFunction(name:String,help:Option[String],labelNames:Seq[String],fun:()=>Double):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,Seq[String]=>com.github.pjfanning.zio.micrometer.ReadOnlyGauge]", "kind" : "def"}, {"label" : "unlabelled", "tail" : "(name: String, help: Option[String]): URIO[Registry, Gauge]", "member" : "com.github.pjfanning.zio.micrometer.safe.Gauge.unlabelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#unlabelled(name:String,help:Option[String]):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,com.github.pjfanning.zio.micrometer.Gauge]", "kind" : "def"}, {"label" : "labelled", "tail" : "(name: String, help: Option[String], labelNames: Seq[String]): URIO[Registry, (Seq[String]) => Gauge]", "member" : "com.github.pjfanning.zio.micrometer.safe.Gauge.labelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#labelled(name:String,help:Option[String],labelNames:Seq[String]):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,Seq[String]=>com.github.pjfanning.zio.micrometer.Gauge]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Gauge$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.pjfanning.zio.micrometer.safe.LabelledMetric", "trait" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/LabelledMetric.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Helper to create strongly typed Micrometer labelled metrics."}, {"name" : "com.github.pjfanning.zio.micrometer.safe.Registry", "shortDescription" : "", "object" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html", "members_object" : [{"label" : "makeWith", "tail" : "(registry: MeterRegistry): ULayer[Registry]", "member" : "com.github.pjfanning.zio.micrometer.safe.Registry.makeWith", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#makeWith(registry:io.micrometer.core.instrument.MeterRegistry):zio.ULayer[com.github.pjfanning.zio.micrometer.safe.package.Registry]", "kind" : "def"}, {"label" : "Service", "tail" : "", "member" : "com.github.pjfanning.zio.micrometer.safe.Registry.Service", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#ServiceextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/package$$Registry$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.pjfanning.zio.micrometer.safe.TimeGauge", "shortDescription" : "", "object" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html", "members_object" : [{"label" : "unlabelledTFunction", "tail" : "(name: String, help: Option[String], timeUnit: TimeUnit, t: T, fun: (T) => Double): URIO[Registry, ReadOnlyTimeGauge]", "member" : "com.github.pjfanning.zio.micrometer.safe.TimeGauge.unlabelledTFunction", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#unlabelledTFunction[T](name:String,help:Option[String],timeUnit:java.util.concurrent.TimeUnit,t:T,fun:T=>Double):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge]", "kind" : "def"}, {"label" : "labelledTFunction", "tail" : "(name: String, help: Option[String], labelNames: Seq[String], timeUnit: TimeUnit, t: T, fun: (T) => Double): URIO[Registry, (Seq[String]) => ReadOnlyTimeGauge]", "member" : "com.github.pjfanning.zio.micrometer.safe.TimeGauge.labelledTFunction", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#labelledTFunction[T](name:String,help:Option[String],labelNames:Seq[String],timeUnit:java.util.concurrent.TimeUnit,t:T,fun:T=>Double):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,Seq[String]=>com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge]", "kind" : "def"}, {"label" : "unlabelledFunction", "tail" : "(name: String, help: Option[String], timeUnit: TimeUnit, fun: => Double): URIO[Registry, ReadOnlyTimeGauge]", "member" : "com.github.pjfanning.zio.micrometer.safe.TimeGauge.unlabelledFunction", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#unlabelledFunction(name:String,help:Option[String],timeUnit:java.util.concurrent.TimeUnit,fun:=>Double):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge]", "kind" : "def"}, {"label" : "labelledFunction", "tail" : "(name: String, help: Option[String], labelNames: Seq[String], timeUnit: TimeUnit, fun: => Double): URIO[Registry, (Seq[String]) => ReadOnlyTimeGauge]", "member" : "com.github.pjfanning.zio.micrometer.safe.TimeGauge.labelledFunction", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#labelledFunction(name:String,help:Option[String],labelNames:Seq[String],timeUnit:java.util.concurrent.TimeUnit,fun:=>Double):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,Seq[String]=>com.github.pjfanning.zio.micrometer.ReadOnlyTimeGauge]", "kind" : "def"}, {"label" : "unlabelled", "tail" : "(name: String, help: Option[String], timeUnit: TimeUnit): URIO[Registry, TimeGauge]", "member" : "com.github.pjfanning.zio.micrometer.safe.TimeGauge.unlabelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#unlabelled(name:String,help:Option[String],timeUnit:java.util.concurrent.TimeUnit):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,com.github.pjfanning.zio.micrometer.TimeGauge]", "kind" : "def"}, {"label" : "labelled", "tail" : "(name: String, help: Option[String], labelNames: Seq[String], timeUnit: TimeUnit): URIO[Registry, (Seq[String]) => TimeGauge]", "member" : "com.github.pjfanning.zio.micrometer.safe.TimeGauge.labelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#labelled(name:String,help:Option[String],labelNames:Seq[String],timeUnit:java.util.concurrent.TimeUnit):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,Seq[String]=>com.github.pjfanning.zio.micrometer.TimeGauge]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/TimeGauge$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.pjfanning.zio.micrometer.safe.Timer", "shortDescription" : "", "object" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html", "members_object" : [{"label" : "unlabelledLongTaskTimer", "tail" : "(name: String, help: Option[String], minimumExpectedValue: Option[FiniteDuration], maximumExpectedValue: Option[FiniteDuration], serviceLevelObjectives: Seq[FiniteDuration], distributionStatisticExpiry: Option[FiniteDuration], distributionStatisticBufferLength: Option[Int], publishPercentiles: Seq[Double], publishPercentileHistogram: Option[Boolean], percentilePrecision: Option[Int]): URIO[Registry, LongTaskTimer]", "member" : "com.github.pjfanning.zio.micrometer.safe.Timer.unlabelledLongTaskTimer", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#unlabelledLongTaskTimer(name:String,help:Option[String],minimumExpectedValue:Option[scala.concurrent.duration.FiniteDuration],maximumExpectedValue:Option[scala.concurrent.duration.FiniteDuration],serviceLevelObjectives:Seq[scala.concurrent.duration.FiniteDuration],distributionStatisticExpiry:Option[scala.concurrent.duration.FiniteDuration],distributionStatisticBufferLength:Option[Int],publishPercentiles:Seq[Double],publishPercentileHistogram:Option[Boolean],percentilePrecision:Option[Int]):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,com.github.pjfanning.zio.micrometer.LongTaskTimer]", "kind" : "def"}, {"label" : "labelledLongTaskTimer", "tail" : "(name: String, help: Option[String], labelNames: Seq[String], minimumExpectedValue: Option[FiniteDuration], maximumExpectedValue: Option[FiniteDuration], serviceLevelObjectives: Seq[FiniteDuration], distributionStatisticExpiry: Option[FiniteDuration], distributionStatisticBufferLength: Option[Int], publishPercentiles: Seq[Double], publishPercentileHistogram: Option[Boolean], percentilePrecision: Option[Int]): URIO[Registry, (Seq[String]) => LongTaskTimer]", "member" : "com.github.pjfanning.zio.micrometer.safe.Timer.labelledLongTaskTimer", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#labelledLongTaskTimer(name:String,help:Option[String],labelNames:Seq[String],minimumExpectedValue:Option[scala.concurrent.duration.FiniteDuration],maximumExpectedValue:Option[scala.concurrent.duration.FiniteDuration],serviceLevelObjectives:Seq[scala.concurrent.duration.FiniteDuration],distributionStatisticExpiry:Option[scala.concurrent.duration.FiniteDuration],distributionStatisticBufferLength:Option[Int],publishPercentiles:Seq[Double],publishPercentileHistogram:Option[Boolean],percentilePrecision:Option[Int]):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,Seq[String]=>com.github.pjfanning.zio.micrometer.LongTaskTimer]", "kind" : "def"}, {"label" : "unlabelled", "tail" : "(name: String, help: Option[String], minimumExpectedValue: Option[FiniteDuration], maximumExpectedValue: Option[FiniteDuration], serviceLevelObjectives: Seq[FiniteDuration], distributionStatisticExpiry: Option[FiniteDuration], distributionStatisticBufferLength: Option[Int], publishPercentiles: Seq[Double], publishPercentileHistogram: Option[Boolean], percentilePrecision: Option[Int], pauseDetector: Option[PauseDetector]): URIO[Registry, Timer]", "member" : "com.github.pjfanning.zio.micrometer.safe.Timer.unlabelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#unlabelled(name:String,help:Option[String],minimumExpectedValue:Option[scala.concurrent.duration.FiniteDuration],maximumExpectedValue:Option[scala.concurrent.duration.FiniteDuration],serviceLevelObjectives:Seq[scala.concurrent.duration.FiniteDuration],distributionStatisticExpiry:Option[scala.concurrent.duration.FiniteDuration],distributionStatisticBufferLength:Option[Int],publishPercentiles:Seq[Double],publishPercentileHistogram:Option[Boolean],percentilePrecision:Option[Int],pauseDetector:Option[io.micrometer.core.instrument.distribution.pause.PauseDetector]):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,com.github.pjfanning.zio.micrometer.Timer]", "kind" : "def"}, {"label" : "labelled", "tail" : "(name: String, help: Option[String], labelNames: Seq[String], minimumExpectedValue: Option[FiniteDuration], maximumExpectedValue: Option[FiniteDuration], serviceLevelObjectives: Seq[FiniteDuration], distributionStatisticExpiry: Option[FiniteDuration], distributionStatisticBufferLength: Option[Int], publishPercentiles: Seq[Double], publishPercentileHistogram: Option[Boolean], percentilePrecision: Option[Int], pauseDetector: Option[PauseDetector]): URIO[Registry, (Seq[String]) => Timer]", "member" : "com.github.pjfanning.zio.micrometer.safe.Timer.labelled", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#labelled(name:String,help:Option[String],labelNames:Seq[String],minimumExpectedValue:Option[scala.concurrent.duration.FiniteDuration],maximumExpectedValue:Option[scala.concurrent.duration.FiniteDuration],serviceLevelObjectives:Seq[scala.concurrent.duration.FiniteDuration],distributionStatisticExpiry:Option[scala.concurrent.duration.FiniteDuration],distributionStatisticBufferLength:Option[Int],publishPercentiles:Seq[Double],publishPercentileHistogram:Option[Boolean],percentilePrecision:Option[Int],pauseDetector:Option[io.micrometer.core.instrument.distribution.pause.PauseDetector]):zio.URIO[com.github.pjfanning.zio.micrometer.safe.Registry,Seq[String]=>com.github.pjfanning.zio.micrometer.Timer]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pjfanning\/zio\/micrometer\/safe\/Timer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com" : [], "com.github" : []};